import {
    IExecuteFunctions,
    INodeExecutionData,
    INodeProperties,
    NodeApiError,
} from 'n8n-workflow';
import { OptionsWithUri } from 'request';
import { FenXToken } from './FenX.node';

let FenergoNebulaRiskCommandv10Properties: INodeProperties[] = [
    {
        displayName: 'Endpoint',
        name: 'endpoint',
        type: 'options',
        options: [
            { name: 'Create a new RiskCalculatorOption', value: 'CreateRiskCalculatorOptions' },{ name: 'Update an existing RiskCalculatorOption', value: 'UpdateRiskCalculatorOptions' },{ name: 'Create a new RiskConfiguration model', value: 'CreateRiskConfigurationModel' },{ name: 'Create a new Version for an existing RiskConfiguration model', value: 'CreateRiskConfigurationModelVersion' },{ name: 'Create a draft from an existing Version of a RiskConfiguration model', value: 'CreateRiskConfigurationModelVersionDraft' },{ name: 'Clone an existing Version of a RiskConfiguration model to a new model', value: 'CloneRiskConfigurationModelVersion' },{ name: 'Sign an existing Version of a RiskConfiguration model', value: 'SignRiskConfigurationModelVersion' },{ name: 'Archive an existing Version of a RiskConfiguration model', value: 'ArchiveRiskConfigurationModelVersion' },{ name: 'Submit an existing Version of a RiskConfiguration model for Approval', value: 'SubmitRiskConfigurationModelVersion' },{ name: 'Delete an existing Version of a RiskConfiguration model', value: 'DeleteRiskConfigurationModelVersion' },{ name: 'Create a new RiskConfigurationCollection', value: 'CreateRiskConfigurationCollection' },{ name: 'Update an existing RiskConfigurationCollection', value: 'UpdateRiskConfigurationCollection' },{ name: 'Create a new RiskModel', value: 'CreateRiskModel' },{ name: 'Create a new Version for an existing RiskModel', value: 'CreateRiskModelVersion' },{ name: 'Clone an existing Version of a RiskModel to a new model', value: 'CloneRiskModelVersion' },{ name: 'Sign an existing Version of a RiskModel', value: 'SignRiskModelVersion' },{ name: 'Archive an existing Version of a RiskModel', value: 'ArchiveRiskModelVersion' },{ name: 'Submit an existing Version of a RiskModel for Approval', value: 'SubmitRiskModelVersion' },{ name: 'Delete an existing Version of a RiskModel', value: 'DeleteRiskModelVersion' },{ name: 'Create scoping rule set', value: 'CreateScopingRuleSet' },{ name: 'Create scoping rule set version', value: 'CreateScopingRuleSetVersion' },{ name: 'Update scoping rule set version', value: 'UpdateScopingRuleSetVersion' },{ name: 'Clone scoping rule set version', value: 'CloneScopingRuleSetVersion' },{ name: 'Submit scoping rule set version for approval', value: 'SubmitScopingRuleSetVersion' },{ name: 'Sign scoping rule set version', value: 'SignScopingRuleSetVersion' },{ name: 'Archive scoping rule set version', value: 'ArchiveScopingRuleSetVersion' },{ name: 'Create a new ThresholdModel', value: 'CreateThresholdModel' },{ name: 'Create a new Version for an existing ThresholdModel', value: 'CreateThresholdModelVersion' },{ name: 'Clone an existing Version of a ThresholdModel to a new model', value: 'CloneThresholdModelVersion' },{ name: 'Sign an existing Version of a ThresholdModel', value: 'SignThresholdModelVersion' },{ name: 'Archive an existing Version of a ThresholdModel', value: 'ArchiveThresholdModelVersion' },{ name: 'Submit an existing Version of a ThresholdModel for Approval', value: 'SubmitThresholdModelVersion' },{ name: 'Delete an existing Version of a ThresholdModel', value: 'DeleteThresholdModelVersion' }
        ],
        displayOptions: {
            show: {
                domain: [
                    'FenergoNebulaRiskCommandv10',
                ],
            },
        },
        default: '',
        required: true,
        description: 'Operation to execute',
    }, { displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model to update', displayOptions: { show: { endpoint: [ 'UpdateRiskCalculatorOptions' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModelVersionDraft' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModelVersionDraft' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CloneRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to clone', displayOptions: { show: { endpoint: [ 'CloneRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SignRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to sign', displayOptions: { show: { endpoint: [ 'SignRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'ArchiveRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to archive', displayOptions: { show: { endpoint: [ 'ArchiveRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SubmitRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'SubmitRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'DeleteRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'DeleteRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'riskConfigurationId', name: 'riskConfigurationId', type: 'string', required: true, default: '', description: 'The Id of the RiskConfiguration model the collection belongs to', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationCollection' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'riskCollectionId', name: 'riskCollectionId', type: 'string', required: true, default: '', description: 'The Id of the existing collection', displayOptions: { show: { endpoint: [ 'UpdateRiskConfigurationCollection' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'riskConfigurationId', name: 'riskConfigurationId', type: 'string', required: true, default: '', description: 'The Id of the RiskConfiguration model the collection belongs to', displayOptions: { show: { endpoint: [ 'UpdateRiskConfigurationCollection' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CreateRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CloneRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to clone', displayOptions: { show: { endpoint: [ 'CloneRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SignRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to sign', displayOptions: { show: { endpoint: [ 'SignRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'ArchiveRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to archive', displayOptions: { show: { endpoint: [ 'ArchiveRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SubmitRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'SubmitRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'DeleteRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'DeleteRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set id', displayOptions: { show: { endpoint: [ 'CreateScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set id', displayOptions: { show: { endpoint: [ 'UpdateScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to update', displayOptions: { show: { endpoint: [ 'UpdateScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set Id', displayOptions: { show: { endpoint: [ 'CloneScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to clone', displayOptions: { show: { endpoint: [ 'CloneScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set Id', displayOptions: { show: { endpoint: [ 'SubmitScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to submit', displayOptions: { show: { endpoint: [ 'SubmitScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set Id', displayOptions: { show: { endpoint: [ 'SignScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to sign', displayOptions: { show: { endpoint: [ 'SignScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'scopingRuleSetId', name: 'scopingRuleSetId', type: 'string', required: true, default: '', description: 'Scoping rule set Id', displayOptions: { show: { endpoint: [ 'ArchiveScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to archive', displayOptions: { show: { endpoint: [ 'ArchiveScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CreateThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CloneThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to clone', displayOptions: { show: { endpoint: [ 'CloneThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SignThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to sign', displayOptions: { show: { endpoint: [ 'SignThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'ArchiveThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to archive', displayOptions: { show: { endpoint: [ 'ArchiveThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SubmitThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'SubmitThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'DeleteThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'DeleteThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "name": "name", "riskCalculatorOption": { "riskModelId": "riskModelId", "configurationModelId": "configurationModelId", "thresholdModelId": "thresholdModelId" }, "alwaysReturnModel": false, "scopeParameters": {} } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskCalculatorOptions' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "name": "name", "riskCalculatorOption": { "riskModelId": "riskModelId", "configurationModelId": "configurationModelId", "thresholdModelId": "thresholdModelId" }, "alwaysReturnModel": false, "scopeParameters": {} } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateRiskCalculatorOptions' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskConfigurationModelVersion": { "parentRiskConfigurationModelId": "parentRiskConfigurationModelId", "name": "name", "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5981176+00:00", "created": "2023-11-30T11:31:48.5981203+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5981406+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5981475+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5981536+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5981600+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModel' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskConfigurationModelVersion": { "parentRiskConfigurationModelId": "parentRiskConfigurationModelId", "name": "name", "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5981911+00:00", "created": "2023-11-30T11:31:48.5981922+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982074+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982133+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982197+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982320+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskConfigurationModelVersion": { "parentRiskConfigurationModelId": "parentRiskConfigurationModelId", "name": "name", "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5982675+00:00", "created": "2023-11-30T11:31:48.5982686+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982836+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982900+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5982957+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983017+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationModelVersionDraft' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983357+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskConfigurationModelVersion": { "parentRiskConfigurationModelId": "parentRiskConfigurationModelId", "name": "name", "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5983546+00:00", "created": "2023-11-30T11:31:48.5983557+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983736+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983798+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983854+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5983914+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'ArchiveRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskConfigurationModelVersion": { "parentRiskConfigurationModelId": "parentRiskConfigurationModelId", "name": "name", "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5984204+00:00", "created": "2023-11-30T11:31:48.5984214+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5984363+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5984426+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5984486+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5984540+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SubmitRiskConfigurationModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "collectionId": "collectionId", "parentRiskConfigurationId": "parentRiskConfigurationId", "parentVersionNumber": 0, "name": "name", "collectionType": "collectionType", "configurationItems": [ { "name": "name", "riskLevel": 0.0, "minRangeValue": 0.0, "maxRangeValue": 0.0 } ], "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskConfigurationCollection' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "collectionId": "collectionId", "parentRiskConfigurationId": "parentRiskConfigurationId", "parentVersionNumber": 0, "name": "name", "collectionType": "collectionType", "configurationItems": [ { "name": "name", "riskLevel": 0.0, "minRangeValue": 0.0, "maxRangeValue": 0.0 } ], "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateRiskConfigurationCollection' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskModelVersion": { "parentRiskModelId": "parentRiskModelId", "name": "name", "riskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5986008+00:00", "created": "2023-11-30T11:31:48.5986021+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5986211+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5986273+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5986328+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5986398+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskModel' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskModelVersion": { "parentRiskModelId": "parentRiskModelId", "name": "name", "riskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5987093+00:00", "created": "2023-11-30T11:31:48.5987104+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5987280+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5987339+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5987399+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5987458+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5987856+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskModelVersion": { "parentRiskModelId": "parentRiskModelId", "name": "name", "riskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5988410+00:00", "created": "2023-11-30T11:31:48.5988421+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5988574+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5988631+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5988692+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5988751+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'ArchiveRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "riskModelVersion": { "parentRiskModelId": "parentRiskModelId", "name": "name", "riskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "riskFactors": [ { "name": "name", "weight": 0.0, "riskLevelCalculationAlgorithm": "riskLevelCalculationAlgorithm", "isMandatory": false } ], "childRiskFactorGroups": [] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5989431+00:00", "created": "2023-11-30T11:31:48.5989442+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5989615+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5989677+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5989736+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5989790+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SubmitRiskModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "effectiveFrom": "2023-11-30T11:31:48.5990152+00:00", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "name": "name" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateScopingRuleSet' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "effectiveFrom": "2023-11-30T11:31:48.5990728+00:00", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "effectiveFrom": "2023-11-30T11:31:48.5991230+00:00", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "version": -1 } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CloneScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5992002+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignScopingRuleSetVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "thresholdModelVersion": { "parentThresholdModelId": "parentThresholdModelId", "name": "name", "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5992316+00:00", "created": "2023-11-30T11:31:48.5992331+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5992521+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5992585+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5992646+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5992705+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateThresholdModel' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "thresholdModelVersion": { "parentThresholdModelId": "parentThresholdModelId", "name": "name", "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5993057+00:00", "created": "2023-11-30T11:31:48.5993073+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5993263+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5993321+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5993382+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5993442+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5993775+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "thresholdModelVersion": { "parentThresholdModelId": "parentThresholdModelId", "name": "name", "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5994013+00:00", "created": "2023-11-30T11:31:48.5994023+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994170+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994233+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994292+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994346+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'ArchiveThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "thresholdModelVersion": { "parentThresholdModelId": "parentThresholdModelId", "name": "name", "thresholds": [ { "name": "name", "minimumValue": 0.0, "maximumValue": 0.0, "nextReviewPeriod": 0 } ], "versionNumber": 0, "effectiveFrom": "2023-11-30T11:31:48.5994728+00:00", "created": "2023-11-30T11:31:48.5994744+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994889+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5994951+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5995011+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2023-11-30T11:31:48.5995070+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SubmitThresholdModelVersion' ], domain: [ 'FenergoNebulaRiskCommandv10' ] } } }
];

async function ExecuteFenergoNebulaRiskCommandv10(base: IExecuteFunctions): Promise < INodeExecutionData[][] > {
    // @ts-ignore
    let token = await FenXToken.getToken(base);

    let requestOptions: OptionsWithUri = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
            'x-tenant-id': FenXToken.tenant
        },
        gzip: true,
        timeout: 3600000,
        uri: ""
    };

    const endpoint = base.getNodeParameter('endpoint', 0) as string;

    let id=''; let versionNumber=''; let riskConfigurationId=''; let riskCollectionId=''; let scopingRuleSetId='';
switch(endpoint){ case 'CreateRiskCalculatorOptions': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-calculator-options';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateRiskCalculatorOptions': id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-calculator-options/{id}'.replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRiskConfigurationModel': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}'.replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRiskConfigurationModelVersionDraft': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}/draft'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}/clone'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
case 'SignRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}/sign'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}/archive'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}/submit'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteRiskConfigurationModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{id}/version/{versionNumber}'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
case 'CreateRiskConfigurationCollection': riskConfigurationId = base.getNodeParameter('riskConfigurationId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{riskConfigurationId}/configuration-collection'.replace('{riskConfigurationId}', riskConfigurationId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateRiskConfigurationCollection': riskCollectionId = base.getNodeParameter('riskCollectionId', 0) as string;
riskConfigurationId = base.getNodeParameter('riskConfigurationId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-configuration/{riskConfigurationId}/configuration-collection/{riskCollectionId}'.replace('{riskCollectionId}', riskCollectionId).replace('{riskConfigurationId}', riskConfigurationId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRiskModel': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}'.replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}/version/{versionNumber}/clone'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
case 'SignRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}/version/{versionNumber}/sign'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}/version/{versionNumber}/archive'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}/version/{versionNumber}/submit'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteRiskModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/risk-model/{id}/version/{versionNumber}'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
case 'CreateScopingRuleSet': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}'.replace('{scopingRuleSetId}', scopingRuleSetId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}/version/{versionNumber}'.replace('{scopingRuleSetId}', scopingRuleSetId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}/version/{versionNumber}/clone'.replace('{scopingRuleSetId}', scopingRuleSetId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}/version/{versionNumber}/submit-for-approval'.replace('{scopingRuleSetId}', scopingRuleSetId).replace('{versionNumber}', versionNumber);

break;
case 'SignScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}/version/{versionNumber}/sign'.replace('{scopingRuleSetId}', scopingRuleSetId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveScopingRuleSetVersion': scopingRuleSetId = base.getNodeParameter('scopingRuleSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/scoping-rule-set/{scopingRuleSetId}/version/{versionNumber}/archive'.replace('{scopingRuleSetId}', scopingRuleSetId).replace('{versionNumber}', versionNumber);

break;
case 'CreateThresholdModel': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}'.replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}/version/{versionNumber}/clone'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
case 'SignThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}/version/{versionNumber}/sign'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}/version/{versionNumber}/archive'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}/version/{versionNumber}/submit'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteThresholdModelVersion': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.fenergox.com/riskcommand/api/threshold-model/{id}/version/{versionNumber}'.replace('{id}', id).replace('{versionNumber}', versionNumber);

break;
}

	let request = base.helpers.request(requestOptions);

    // @ts-ignore
    const promisesResponses = await Promise.allSettled([request]);
    let response: any; // tslint:disable-line:no-any
    response = promisesResponses.shift();
    if(response!.status !== 'fulfilled') {
    // throw error;
    console.log(request);
    throw new NodeApiError(base.getNode(), response);
}
    try {
        response = JSON.parse(response.value);
    }
    catch { response = response.value; }

const returnItems: INodeExecutionData[] = [];
returnItems.push({ json: response });

return base.prepareOutputData(returnItems);
}

export {
    FenergoNebulaRiskCommandv10Properties,
    ExecuteFenergoNebulaRiskCommandv10
}
