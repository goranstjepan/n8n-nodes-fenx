import {
    IExecuteFunctions,
    INodeExecutionData,
    INodeProperties,
    NodeApiError,
} from 'n8n-workflow';
import { OptionsWithUri } from 'request';
import { FenXToken } from './FenXAPAC.node';

let FenergoNebulaPolicyCommandv1000Properties: INodeProperties[] = [
    {
        displayName: 'Endpoint',
        name: 'endpoint',
        type: 'options',
        options: [
            { name: 'Create data group', value: 'CreateDataGroup' },{ name: 'Create data group version', value: 'CreateDataGroupVersion' },{ name: 'Delete data group and all its versions', value: 'DeleteDataGroup' },{ name: 'Create data group version draft from different version', value: 'CreateDataGroupVersionDraft' },{ name: 'Update data group version', value: 'UpdateDataGroupVersion' },{ name: 'Delete data group version', value: 'DeleteDataGroupVersion' },{ name: 'Clone data group version', value: 'CloneDataGroupVersion' },{ name: 'Submit data group version for approval', value: 'SubmitDataGroupVersion' },{ name: 'Sign data group version', value: 'SignDataGroupVersion' },{ name: 'Archive data group version', value: 'ArchiveDataGroupVersion' },{ name: 'Add data group field', value: 'AddDataGroupField' },{ name: 'Update data group field', value: 'UpdateDataGroupField' },{ name: 'Delete data group field', value: 'DeleteDataGroupField' },{ name: 'Create requirement set', value: 'CreateRequirementSet' },{ name: 'Create requirement set version', value: 'CreateRequirementSetVersion' },{ name: 'Delete requirement set and all its versions', value: 'DeleteRequirementSet' },{ name: 'Create requirement set version from provided set id', value: 'CreateRequirementSetVersionFromSetId' },{ name: 'Update requirement set version', value: 'UpdateRequirementSetVersion' },{ name: 'Delete requirement set version', value: 'DeleteRequirementSetVersion' },{ name: 'Update properties in the specified requirement set version', value: 'UpdateRequirementSetVersionLite' },{ name: 'Clone requirement set version', value: 'CloneRequirementSetVersion' },{ name: 'Submit requirement set version for approval', value: 'SubmitRequirementSetVersion' },{ name: 'Sign requirement set version', value: 'SignRequirementSetVersion' },{ name: 'Archive requirement set version', value: 'ArchiveRequirementSetVersion' },{ name: 'Add requirement', value: 'AddRequirement' },{ name: 'Update requirement', value: 'UpdateRequirement' },{ name: 'Delete requirement', value: 'DeleteRequirement' },{ name: 'Update requirements DataProtectionJurisdiction', value: 'UpdateRequirementsDataProtectionJurisdiction' }
        ],
        displayOptions: {
            show: {
                domain: [
                    'FenergoNebulaPolicyCommandv1000',
                ],
            },
        },
        default: '',
        required: true,
        description: 'Operation to execute',
    }, { displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'CreateDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'DeleteDataGroup' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'dataGroupId', name: 'dataGroupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'CreateDataGroupVersionDraft' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to create a new draft from', displayOptions: { show: { endpoint: [ 'CreateDataGroupVersionDraft' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'UpdateDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to update', displayOptions: { show: { endpoint: [ 'UpdateDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'DeleteDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to delete', displayOptions: { show: { endpoint: [ 'DeleteDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'dataGroupId', name: 'dataGroupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'CloneDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to clone', displayOptions: { show: { endpoint: [ 'CloneDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'SubmitDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to submit', displayOptions: { show: { endpoint: [ 'SubmitDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'SignDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to sign', displayOptions: { show: { endpoint: [ 'SignDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'groupId', name: 'groupId', type: 'string', required: true, default: '', description: 'Data group Id', displayOptions: { show: { endpoint: [ 'ArchiveDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to archive', displayOptions: { show: { endpoint: [ 'ArchiveDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Data group id', displayOptions: { show: { endpoint: [ 'AddDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Data group version number', displayOptions: { show: { endpoint: [ 'AddDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Data group id', displayOptions: { show: { endpoint: [ 'UpdateDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Data group version number', displayOptions: { show: { endpoint: [ 'UpdateDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Data group id', displayOptions: { show: { endpoint: [ 'DeleteDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Data group version number', displayOptions: { show: { endpoint: [ 'DeleteDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'fieldId', name: 'fieldId', type: 'string', required: true, default: '', description: 'Data group field id to delete', displayOptions: { show: { endpoint: [ 'DeleteDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'CreateRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'DeleteRequirementSet' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'CreateRequirementSetVersionFromSetId' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to create new draft from', displayOptions: { show: { endpoint: [ 'CreateRequirementSetVersionFromSetId' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to update', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'DeleteRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to delete', displayOptions: { show: { endpoint: [ 'DeleteRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersionLite' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to update', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersionLite' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'requirementSetId', name: 'requirementSetId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'CloneRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to clone', displayOptions: { show: { endpoint: [ 'CloneRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'SubmitRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to submit', displayOptions: { show: { endpoint: [ 'SubmitRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'SignRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to sign', displayOptions: { show: { endpoint: [ 'SignRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'ArchiveRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to archive', displayOptions: { show: { endpoint: [ 'ArchiveRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'AddRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Requirement set version number', displayOptions: { show: { endpoint: [ 'AddRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'UpdateRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Requirement set version number', displayOptions: { show: { endpoint: [ 'UpdateRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'DeleteRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Requirement set version number', displayOptions: { show: { endpoint: [ 'DeleteRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'fieldId', name: 'fieldId', type: 'string', required: true, default: '', description: 'Requirement id to delete', displayOptions: { show: { endpoint: [ 'DeleteRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Requirement set id', displayOptions: { show: { endpoint: [ 'UpdateRequirementsDataProtectionJurisdiction' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to update data protection jurisdiction', displayOptions: { show: { endpoint: [ 'UpdateRequirementsDataProtectionJurisdiction' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "groupId": "groupId", "name": "name", "description": "description", "dataGroupFields": [ { "identifier": "identifier", "name": "name", "type": "type", "order": 0.0, "isSensitiveData": false, "defaultValue": "defaultValue", "isReadOnly": false, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9165146+00:00", "maxDate": "2024-03-06T11:17:03.9165178+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9167575+00:00", "maxDate": "2024-03-06T11:17:03.9167597+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9168051+00:00", "maxDate": "2024-03-06T11:17:03.9168067+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "description": "description", "tags": [ "" ], "category": "category", "entityType": "entityType", "jurisdiction": "jurisdiction", "isCoreDefinition": false, "isMaterialData": false, "references": [ { "type": "type", "description": "description", "url": "url" } ] } ], "primaryDataGroupField": "primaryDataGroupField", "disableMultiselectPrimaryFieldOnAdd": false, "cardinality": false, "template": "template", "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9170679+00:00", "created": "2024-03-06T11:17:03.9170691+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9170900+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9170972+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9171038+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9171104+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateDataGroup' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "groupId": "groupId", "name": "name", "description": "description", "dataGroupFields": [ { "identifier": "identifier", "name": "name", "type": "type", "order": 0.0, "isSensitiveData": false, "defaultValue": "defaultValue", "isReadOnly": false, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9173665+00:00", "maxDate": "2024-03-06T11:17:03.9173686+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9175960+00:00", "maxDate": "2024-03-06T11:17:03.9175978+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9176421+00:00", "maxDate": "2024-03-06T11:17:03.9176435+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "description": "description", "tags": [ "" ], "category": "category", "entityType": "entityType", "jurisdiction": "jurisdiction", "isCoreDefinition": false, "isMaterialData": false, "references": [ { "type": "type", "description": "description", "url": "url" } ] } ], "primaryDataGroupField": "primaryDataGroupField", "disableMultiselectPrimaryFieldOnAdd": false, "cardinality": false, "template": "template", "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9178960+00:00", "created": "2024-03-06T11:17:03.9178970+00:00", "status": "Draft", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9179154+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9179223+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9179290+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9179352+00:00" }, "hasProcessedRequest": false } ], "notes": "notes" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "groupId": "groupId", "name": "name", "description": "description", "dataGroupFields": [ { "identifier": "identifier", "name": "name", "type": "type", "order": 0.0, "isSensitiveData": false, "defaultValue": "defaultValue", "isReadOnly": false, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9181687+00:00", "maxDate": "2024-03-06T11:17:03.9181704+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9184001+00:00", "maxDate": "2024-03-06T11:17:03.9184017+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9184515+00:00", "maxDate": "2024-03-06T11:17:03.9184534+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "description": "description", "tags": [ "" ], "category": "category", "entityType": "entityType", "jurisdiction": "jurisdiction", "isCoreDefinition": false, "isMaterialData": false, "references": [ { "type": "type", "description": "description", "url": "url" } ] } ], "primaryDataGroupField": "primaryDataGroupField", "disableMultiselectPrimaryFieldOnAdd": false, "cardinality": false, "template": "template", "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9187042+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9187205+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9187272+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9187338+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9187403+00:00" }, "hasProcessedRequest": false } ], "version": -1, "notes": "notes" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name", "description": "description" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CloneDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9188953+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignDataGroupVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "identifier": "identifier", "name": "name", "type": "type", "order": 0.0, "isSensitiveData": false, "defaultValue": "defaultValue", "isReadOnly": false, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9190079+00:00", "maxDate": "2024-03-06T11:17:03.9190094+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9192242+00:00", "maxDate": "2024-03-06T11:17:03.9192256+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9192707+00:00", "maxDate": "2024-03-06T11:17:03.9192722+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "description": "description", "tags": [ "" ], "category": "category", "entityType": "entityType", "jurisdiction": "jurisdiction", "isCoreDefinition": false, "isMaterialData": false, "references": [ { "type": "type", "description": "description", "url": "url" } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'AddDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "version": -1, "identifier": "identifier", "name": "name", "type": "type", "order": 0.0, "isSensitiveData": false, "defaultValue": "defaultValue", "isReadOnly": false, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9197064+00:00", "maxDate": "2024-03-06T11:17:03.9197080+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9199221+00:00", "maxDate": "2024-03-06T11:17:03.9199236+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9199650+00:00", "maxDate": "2024-03-06T11:17:03.9199669+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "description": "description", "tags": [ "" ], "category": "category", "entityType": "entityType", "jurisdiction": "jurisdiction", "isCoreDefinition": false, "isMaterialData": false, "references": [ { "type": "type", "description": "description", "url": "url" } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateDataGroupField' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "created": "2024-03-06T11:17:03.9203030+00:00", "status": "Draft", "requirements": [ { "identifier": "identifier", "requirementSetId": "requirementSetId", "category": "category", "description": "description", "template": "template", "entityType": "entityType", "name": "name", "order": 0.0, "isSensitiveData": false, "isMaterialData": false, "isCoreDefinition": false, "isIndexable": false, "jurisdiction": "jurisdiction", "dataProtectionJurisdiction": "dataProtectionJurisdiction", "classification": "classification", "isReadOnly": false, "isMandatory": false, "targetEntity": "targetEntity", "type": "type", "documentDescription": "documentDescription", "documentDataKey": "documentDataKey", "partyType": "partyType", "partyTypes": [ "" ], "partyCount": 0, "uboThreshold": 0.0, "ownershipDataKey": "ownershipDataKey", "sourceEntityType": "sourceEntityType", "relatedPartyEntityTypes": [ "" ], "directAssociationsOnly": false, "idvOn": false, "idvName": "idvName", "idvTooltip": "idvTooltip", "ownershipValidationRule": { "id": "id", "setId": "setId", "ownershipValidationData": { "isMandatory": { "active": false, "message": "message" }, "partyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "addAllParties": { "active": false, "message": "message" }, "idvIsMandatory": { "active": false, "message": "message" }, "idvPartyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "idvAllParties": { "active": false, "message": "message" } } }, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "references": [ { "type": "type", "description": "description", "url": "url" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9205291+00:00", "maxDate": "2024-03-06T11:17:03.9205305+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9207485+00:00", "maxDate": "2024-03-06T11:17:03.9207500+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9207924+00:00", "maxDate": "2024-03-06T11:17:03.9207939+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "defaultValue": "defaultValue", "documentAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "acceptableDocumentDataKeys": [ "" ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "tags": [ "" ], "fieldAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "uiDecoration": "uiDecoration", "uiColorDecoration": "uiColorDecoration", "portalGuidance": "portalGuidance" } ], "notes": "notes", "defaultDataProtectionJurisdiction": "defaultDataProtectionJurisdiction", "setId": "setId", "name": "name", "jurisdiction": "jurisdiction", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9210501+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9210667+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9210739+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9210801+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9210866+00:00" }, "hasProcessedRequest": false } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRequirementSet' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "created": "2024-03-06T11:17:03.9212248+00:00", "status": "Draft", "requirements": [ { "identifier": "identifier", "requirementSetId": "requirementSetId", "category": "category", "description": "description", "template": "template", "entityType": "entityType", "name": "name", "order": 0.0, "isSensitiveData": false, "isMaterialData": false, "isCoreDefinition": false, "isIndexable": false, "jurisdiction": "jurisdiction", "dataProtectionJurisdiction": "dataProtectionJurisdiction", "classification": "classification", "isReadOnly": false, "isMandatory": false, "targetEntity": "targetEntity", "type": "type", "documentDescription": "documentDescription", "documentDataKey": "documentDataKey", "partyType": "partyType", "partyTypes": [ "" ], "partyCount": 0, "uboThreshold": 0.0, "ownershipDataKey": "ownershipDataKey", "sourceEntityType": "sourceEntityType", "relatedPartyEntityTypes": [ "" ], "directAssociationsOnly": false, "idvOn": false, "idvName": "idvName", "idvTooltip": "idvTooltip", "ownershipValidationRule": { "id": "id", "setId": "setId", "ownershipValidationData": { "isMandatory": { "active": false, "message": "message" }, "partyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "addAllParties": { "active": false, "message": "message" }, "idvIsMandatory": { "active": false, "message": "message" }, "idvPartyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "idvAllParties": { "active": false, "message": "message" } } }, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "references": [ { "type": "type", "description": "description", "url": "url" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9253859+00:00", "maxDate": "2024-03-06T11:17:03.9253888+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9256192+00:00", "maxDate": "2024-03-06T11:17:03.9256208+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9256681+00:00", "maxDate": "2024-03-06T11:17:03.9256698+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "defaultValue": "defaultValue", "documentAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "acceptableDocumentDataKeys": [ "" ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "tags": [ "" ], "fieldAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "uiDecoration": "uiDecoration", "uiColorDecoration": "uiColorDecoration", "portalGuidance": "portalGuidance" } ], "notes": "notes", "defaultDataProtectionJurisdiction": "defaultDataProtectionJurisdiction", "setId": "setId", "name": "name", "jurisdiction": "jurisdiction", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9259253+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9259429+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9259497+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9259562+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9259627+00:00" }, "hasProcessedRequest": false } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "setId": "setId", "name": "name", "jurisdiction": "jurisdiction", "defaultDataProtectionJurisdiction": "defaultDataProtectionJurisdiction", "requirements": [ { "identifier": "identifier", "requirementSetId": "requirementSetId", "category": "category", "description": "description", "template": "template", "entityType": "entityType", "name": "name", "order": 0.0, "isSensitiveData": false, "isMaterialData": false, "isCoreDefinition": false, "isIndexable": false, "jurisdiction": "jurisdiction", "dataProtectionJurisdiction": "dataProtectionJurisdiction", "classification": "classification", "isReadOnly": false, "isMandatory": false, "targetEntity": "targetEntity", "type": "type", "documentDescription": "documentDescription", "documentDataKey": "documentDataKey", "partyType": "partyType", "partyTypes": [ "" ], "partyCount": 0, "uboThreshold": 0.0, "ownershipDataKey": "ownershipDataKey", "sourceEntityType": "sourceEntityType", "relatedPartyEntityTypes": [ "" ], "directAssociationsOnly": false, "idvOn": false, "idvName": "idvName", "idvTooltip": "idvTooltip", "ownershipValidationRule": { "id": "id", "setId": "setId", "ownershipValidationData": { "isMandatory": { "active": false, "message": "message" }, "partyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "addAllParties": { "active": false, "message": "message" }, "idvIsMandatory": { "active": false, "message": "message" }, "idvPartyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "idvAllParties": { "active": false, "message": "message" } } }, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "references": [ { "type": "type", "description": "description", "url": "url" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9263469+00:00", "maxDate": "2024-03-06T11:17:03.9263490+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9265677+00:00", "maxDate": "2024-03-06T11:17:03.9265691+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9266201+00:00", "maxDate": "2024-03-06T11:17:03.9266216+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "defaultValue": "defaultValue", "documentAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "acceptableDocumentDataKeys": [ "" ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "tags": [ "" ], "fieldAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "uiDecoration": "uiDecoration", "uiColorDecoration": "uiColorDecoration", "portalGuidance": "portalGuidance" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "versionNumber": 0, "effectiveFrom": "2024-03-06T11:17:03.9268640+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9268803+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9268869+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9268934+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9269000+00:00" }, "hasProcessedRequest": false } ], "version": -1, "notes": "notes" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name", "defaultDataProtectionJurisdiction": "defaultDataProtectionJurisdiction", "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "version": -1, "notes": "notes" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateRequirementSetVersionLite' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name", "jurisdiction": "jurisdiction" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CloneRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2024-03-06T11:17:03.9271323+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignRequirementSetVersion' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "identifier": "identifier", "requirementSetId": "requirementSetId", "category": "category", "description": "description", "template": "template", "entityType": "entityType", "name": "name", "order": 0.0, "isSensitiveData": false, "isMaterialData": false, "isCoreDefinition": false, "isIndexable": false, "jurisdiction": "jurisdiction", "dataProtectionJurisdiction": "dataProtectionJurisdiction", "classification": "classification", "isReadOnly": false, "isMandatory": false, "targetEntity": "targetEntity", "type": "type", "documentDescription": "documentDescription", "documentDataKey": "documentDataKey", "partyType": "partyType", "partyTypes": [ "" ], "partyCount": 0, "uboThreshold": 0.0, "ownershipDataKey": "ownershipDataKey", "sourceEntityType": "sourceEntityType", "relatedPartyEntityTypes": [ "" ], "directAssociationsOnly": false, "idvOn": false, "idvName": "idvName", "idvTooltip": "idvTooltip", "ownershipValidationRule": { "id": "id", "setId": "setId", "ownershipValidationData": { "isMandatory": { "active": false, "message": "message" }, "partyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "addAllParties": { "active": false, "message": "message" }, "idvIsMandatory": { "active": false, "message": "message" }, "idvPartyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "idvAllParties": { "active": false, "message": "message" } } }, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "references": [ { "type": "type", "description": "description", "url": "url" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9273506+00:00", "maxDate": "2024-03-06T11:17:03.9273525+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9275685+00:00", "maxDate": "2024-03-06T11:17:03.9275700+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9276132+00:00", "maxDate": "2024-03-06T11:17:03.9276146+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "defaultValue": "defaultValue", "documentAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "acceptableDocumentDataKeys": [ "" ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "tags": [ "" ], "fieldAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "uiDecoration": "uiDecoration", "uiColorDecoration": "uiColorDecoration", "portalGuidance": "portalGuidance" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'AddRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "version": -1, "identifier": "identifier", "requirementSetId": "requirementSetId", "category": "category", "description": "description", "template": "template", "entityType": "entityType", "name": "name", "order": 0.0, "isSensitiveData": false, "isMaterialData": false, "isCoreDefinition": false, "isIndexable": false, "jurisdiction": "jurisdiction", "dataProtectionJurisdiction": "dataProtectionJurisdiction", "classification": "classification", "isReadOnly": false, "isMandatory": false, "targetEntity": "targetEntity", "type": "type", "documentDescription": "documentDescription", "documentDataKey": "documentDataKey", "partyType": "partyType", "partyTypes": [ "" ], "partyCount": 0, "uboThreshold": 0.0, "ownershipDataKey": "ownershipDataKey", "sourceEntityType": "sourceEntityType", "relatedPartyEntityTypes": [ "" ], "directAssociationsOnly": false, "idvOn": false, "idvName": "idvName", "idvTooltip": "idvTooltip", "ownershipValidationRule": { "id": "id", "setId": "setId", "ownershipValidationData": { "isMandatory": { "active": false, "message": "message" }, "partyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "addAllParties": { "active": false, "message": "message" }, "idvIsMandatory": { "active": false, "message": "message" }, "idvPartyCount": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "idvAllParties": { "active": false, "message": "message" } } }, "dataField": { "propertyName": "propertyName", "propertyType": "propertyType", "propertyTypeId": "propertyTypeId", "linkChildFieldPropertyName": "linkChildFieldPropertyName", "linkedParentFieldPropertyName": "linkedParentFieldPropertyName", "externalSearchApiProviderId": "externalSearchApiProviderId", "formulaSchema": { "formulaSetId": "formulaSetId", "versionNumber": 0, "formulaString": "formulaString", "formulaVariables": {} } }, "references": [ { "type": "type", "description": "description", "url": "url" } ], "conditions": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ] } ], "validationRule": { "id": "id", "setId": "setId", "propertyId": "propertyId", "dataGroupId": "dataGroupId", "isDataGroup": false, "propertyName": "propertyName", "friendlyName": "friendlyName", "validationType": "validationType", "validationData": { "isMandatory": { "active": false, "message": "message" }, "specialCharacters": { "excludedCharacters": [ "" ], "active": false, "message": "message" }, "noNumbers": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "regex": { "isCaseSensitive": false, "regexValue": "regexValue", "active": false, "message": "message" }, "characterLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "numberLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "noFutureDates": { "active": false, "message": "message" }, "noPastDates": { "active": false, "message": "message" }, "dateLimit": { "minDate": "2024-03-06T11:17:03.9281381+00:00", "maxDate": "2024-03-06T11:17:03.9281398+00:00", "active": false, "message": "message" }, "multiSelectLimit": { "minValue": 0, "maxValue": 0, "active": false, "message": "message" }, "collectionMinimumCount": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "active": false, "message": "message" }, "collectionMaximumCount": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "active": false, "message": "message" }, "externalProvider": { "providerId": "providerId", "active": false, "message": "message" }, "externalDataGroupProvider": { "providerId": "providerId", "active": false, "message": "message" } } }, "validationRulesV2": { "mandatory": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "errorMessage": "errorMessage" }, "priority": 0 } ] }, "specialCharacters": { "isActive": false, "staticRule": { "excludedCharacters": [ "" ], "errorMessage": "errorMessage" } }, "noNumbers": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyInteger": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noNegative": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "onlyDecimal": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "regex": { "isActive": false, "staticRule": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "isCaseSensitive": false, "regexValue": "regexValue", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "characterLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "numberLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" } }, "noFutureDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "noPastDates": { "isActive": false, "staticRule": { "errorMessage": "errorMessage" } }, "dateLimit": { "isActive": false, "staticRule": { "minDate": "2024-03-06T11:17:03.9283520+00:00", "maxDate": "2024-03-06T11:17:03.9283534+00:00", "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minDate": "2024-03-06T11:17:03.9283955+00:00", "maxDate": "2024-03-06T11:17:03.9283969+00:00", "errorMessage": "errorMessage" }, "priority": 0 } ] }, "multiSelectLimit": { "isActive": false, "staticRule": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": { "minValue": 0, "maxValue": 0, "errorMessage": "errorMessage" }, "priority": 0 } ] }, "collectionMinimumCount": { "isActive": false, "staticRule": { "requiredTypesMinCount": {}, "overallMinimumCount": 0, "errorMessage": "errorMessage" } }, "collectionMaximumCount": { "isActive": false, "staticRule": { "requiredTypesMaxCount": {}, "overallMaximumCount": 0, "errorMessage": "errorMessage" } }, "externalProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "externalDataGroupProvider": { "isActive": false, "staticRule": { "providerId": "providerId" } }, "readOnly": { "isActive": false, "staticRule": {}, "dynamicRules": [ { "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": {}, "priority": 0 } ] }, "timeZoneId": "timeZoneId" }, "defaultValue": "defaultValue", "documentAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "acceptableDocumentDataKeys": [ "" ], "conditionalValues": [ { "valueId": "valueId", "id": "id", "name": "name", "description": "description", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [ { "fieldName": "fieldName", "value": [ "" ], "valueId": [ "" ], "valueType": "valueType", "dataSource": "dataSource", "operation": "operation", "logicalOperation": "logicalOperation", "operands": [] } ] } ] } ], "value": "value", "priority": 0 } ], "tags": [ "" ], "fieldAccessLayers": { "geographic": [ "" ], "businessRelated": [ "" ] }, "uiDecoration": "uiDecoration", "uiColorDecoration": "uiColorDecoration", "portalGuidance": "portalGuidance" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateRequirement' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } },{ displayName: 'allowGlobalPolicyRemoval', name: 'allowGlobalPolicyRemoval', type: 'string', required: true, default: '', description: 'Flag allowing to delete Global policy (Not recommended)', displayOptions: { show: { endpoint: [ 'DeleteRequirementSet' ], domain: [ 'FenergoNebulaPolicyCommandv1000' ] } } }
];

async function ExecuteFenergoNebulaPolicyCommandv1000(base: IExecuteFunctions): Promise < INodeExecutionData[][] > {
    // @ts-ignore
    let token = await FenXToken.getToken(base);

    let requestOptions: OptionsWithUri = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
            'x-tenant-id': FenXToken.tenant
        },
        gzip: true,
        timeout: 3600000,
        uri: ""
    };

    const endpoint = base.getNodeParameter('endpoint', 0) as string;

    let groupId=''; let dataGroupId=''; let versionNumber=''; let id=''; let fieldId=''; let setId=''; let requirementSetId='';
switch(endpoint){ case 'CreateDataGroup': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}'.replace('{groupId}', groupId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteDataGroup': groupId = base.getNodeParameter('groupId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}'.replace('{groupId}', groupId);

break;
case 'CreateDataGroupVersionDraft': dataGroupId = base.getNodeParameter('dataGroupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{dataGroupId}/version/{versionNumber}/draft'.replace('{dataGroupId}', dataGroupId).replace('{versionNumber}', versionNumber);

break;
case 'UpdateDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}/version/{versionNumber}'.replace('{groupId}', groupId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}/version/{versionNumber}'.replace('{groupId}', groupId).replace('{versionNumber}', versionNumber);

break;
case 'CloneDataGroupVersion': dataGroupId = base.getNodeParameter('dataGroupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{dataGroupId}/version/{versionNumber}/clone'.replace('{dataGroupId}', dataGroupId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}/version/{versionNumber}/submit-for-approval'.replace('{groupId}', groupId).replace('{versionNumber}', versionNumber);

break;
case 'SignDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}/version/{versionNumber}/sign'.replace('{groupId}', groupId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveDataGroupVersion': groupId = base.getNodeParameter('groupId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{groupId}/version/{versionNumber}/archive'.replace('{groupId}', groupId).replace('{versionNumber}', versionNumber);

break;
case 'AddDataGroupField': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{id}/version/{versionNumber}/field'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateDataGroupField': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{id}/version/{versionNumber}/field'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteDataGroupField': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
fieldId = base.getNodeParameter('fieldId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/data-group/{id}/version/{versionNumber}/field/{fieldId}'.replace('{id}', id).replace('{versionNumber}', versionNumber).replace('{fieldId}', fieldId);

break;
case 'CreateRequirementSet': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}'.replace('{setId}', setId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteRequirementSet': setId = base.getNodeParameter('setId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}'.replace('{setId}', setId);
requestOptions.qs = { allowGlobalPolicyRemoval: base.getNodeParameter('allowGlobalPolicyRemoval', 0) as string };
break;
case 'CreateRequirementSetVersionFromSetId': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/draft'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

break;
case 'UpdateRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

break;
case 'UpdateRequirementSetVersionLite': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/lite'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneRequirementSetVersion': requirementSetId = base.getNodeParameter('requirementSetId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{requirementSetId}/version/{versionNumber}/clone'.replace('{requirementSetId}', requirementSetId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/submit-for-approval'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

break;
case 'SignRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/sign'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveRequirementSetVersion': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/archive'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

break;
case 'AddRequirement': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{id}/version/{versionNumber}/field'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateRequirement': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{id}/version/{versionNumber}/field'.replace('{id}', id).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteRequirement': id = base.getNodeParameter('id', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
fieldId = base.getNodeParameter('fieldId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{id}/version/{versionNumber}/field/{fieldId}'.replace('{id}', id).replace('{versionNumber}', versionNumber).replace('{fieldId}', fieldId);

break;
case 'UpdateRequirementsDataProtectionJurisdiction': setId = base.getNodeParameter('setId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/policycommand/api/requirement-set/{setId}/version/{versionNumber}/update-requirements-dataprotection-jurisdiction'.replace('{setId}', setId).replace('{versionNumber}', versionNumber);

break;
}

	let request = base.helpers.request(requestOptions);

    // @ts-ignore
    const promisesResponses = await Promise.allSettled([request]);
    let response: any; // tslint:disable-line:no-any
    response = promisesResponses.shift();
    if(response!.status !== 'fulfilled') {
    // throw error;
    console.log(request);
    throw new NodeApiError(base.getNode(), response);
}
    try {
        response = JSON.parse(response.value);
    }
    catch { response = response.value; }

const returnItems: INodeExecutionData[] = [];
returnItems.push({ json: response });

return base.prepareOutputData(returnItems);
}

export {
    FenergoNebulaPolicyCommandv1000Properties,
    ExecuteFenergoNebulaPolicyCommandv1000
}
