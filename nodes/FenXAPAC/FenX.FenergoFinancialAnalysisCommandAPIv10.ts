import {
    IExecuteFunctions,
    INodeExecutionData,
    INodeProperties,
    NodeApiError,
} from 'n8n-workflow';
import { OptionsWithUri } from 'request';
import { FenXToken } from './FenXAPAC.node';

let FenergoFinancialAnalysisCommandAPIv10Properties: INodeProperties[] = [
    {
        displayName: 'Endpoint',
        name: 'endpoint',
        type: 'options',
        options: [
            { name: 'Create a new Capacity to Service Set', value: 'CreateAllocationSet' },{ name: 'Create a new Capacity to Service Version and Capacity to Service Schema', value: 'CreateAllocationVersion' },{ name: 'Update a Capacity to Service Version', value: 'UpdateAllocationVersion' },{ name: 'Update a Capacity to Service Version status', value: 'UpdateAllocationStatus' },{ name: 'Update a Capacity to Service Schema', value: 'UpdateAllocationSchema' },{ name: 'Create a new Capacity to Service Configuration', value: 'CreateAllocationConfiguration' },{ name: 'Delete Capacity to Service Configuration and all it"s versions', value: 'DeleteAllocationConfiguration' },{ name: 'Create a new Version for an existing Capacity to Service Configuration', value: 'CreateAllocationConfigurationVersion' },{ name: 'Clone a Capacity to Service Configuration', value: 'CloneAllocationConfiguration' },{ name: 'Updates an existing Version of a Capacity to Service Configuration', value: 'UpdateAllocationConfigurationVersion' },{ name: 'Submit an existing Version of a Capacity to Service Configuration for Approval', value: 'SubmitAllocationConfigurationVersion' },{ name: 'Sign an existing Version of a Capacity to Service Configuration', value: 'SignAllocationConfigurationVersion' },{ name: 'Archive an existing Version of a Capacity to Service Configuration', value: 'ArchiveAllocationConfigurationVersion' },{ name: 'Create a new Financial Analysis Configuration', value: 'CreateConfiguration' },{ name: 'Delete Financial Analysis Configuration and all it"s versions', value: 'DeleteConfiguration' },{ name: 'Create a new Version for an existing Financial Analysis Configuration', value: 'CreateConfigurationVersion' },{ name: 'Clone a Financial Analysis Configuration', value: 'CloneConfiguration' },{ name: 'Updates an existing Version of a Financial Analysis Configuration', value: 'UpdateConfigurationVersion' },{ name: 'Submit an existing Version of a Financial Analysis Configuration for Approval', value: 'SubmitConfigurationVersion' },{ name: 'Sign an existing Version of a Financial Analysis Configuration', value: 'SignConfigurationVersion' },{ name: 'Archive an existing Version of a Financial Analysis Configuration', value: 'ArchiveConfigurationVersion' },{ name: 'Create a new Financial Analysis Set', value: 'CreateFinancialAnalysisSet' },{ name: 'Initialize a new Joint Financial Analysis', value: 'InitializeJointFinancialAnalysis' },{ name: 'Create a new Financial Analysis Version and Financial Analysis Schema', value: 'CreateFinancialAnalysisVersion' },{ name: 'Update a Financial Analysis Version', value: 'UpdateFinancialAnalysisVersion' },{ name: 'Update a Financial Analysis Version"s Scenario', value: 'UpdateScenarios' },{ name: 'Update a Financial Analysis Version"s Summary', value: 'UpdateSummary' },{ name: 'Update a Financial Analysis Version status', value: 'UpdateFinancialAnalysisStatus' },{ name: 'Update a Financial Analysis Version status', value: 'UpdateFinancialAnalysisStatus' },{ name: 'Update a Financial Analysis Version External Review Status', value: 'UpdateFinancialAnalysisReviewStatus' },{ name: 'Complete all financial analysis sets by task id', value: 'CompleteAllFinancialAnalysisVersions' },{ name: 'Update a Financial Analysis Schema', value: 'UpdateSchema' },{ name: 'Create a new Financial Import to a Provider', value: 'CreateFinancialImport' },{ name: 'Update an existing Import Provider', value: 'UpdateImportProvider' },{ name: 'Delete a Import Provider', value: 'DeleteImportProvider' },{ name: 'Create Financial Imports all to eligible providers', value: 'CreateFinancialImportsToAllProviders' },{ name: 'Create a New Import Provider', value: 'CreateImportProvider' },{ name: 'Create a default provider', value: 'CreateDefaultImportProvider' },{ name: 'Update whether an Import Provider is enabled', value: 'UpdateImportProviderEnabled' },{ name: 'Create a new Import Mapping', value: 'CreateImportMapping' },{ name: 'Update an existing Import Mapping', value: 'UpdateImportMapping' },{ name: 'Delete an existing Import Mapping', value: 'DeleteImportMapping' },{ name: 'Create a new Adapter Schema', value: 'CreateAdapterSchema' },{ name: 'Update an existing Adapter Schema', value: 'UpdateAdapterSchema' },{ name: 'Delete an existing Adapter Schema', value: 'DeleteAdapterSchema' },{ name: 'Test an adapter endpoint', value: 'TestImportProvider' }
        ],
        displayOptions: {
            show: {
                domain: [
                    'FenergoFinancialAnalysisCommandAPIv10',
                ],
            },
        },
        default: '',
        required: true,
        description: 'Operation to execute',
    }, { displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Capacity to Service Set Id', displayOptions: { show: { endpoint: [ 'CreateAllocationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Capacity to Service Set Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Capacity to Service Version Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Capacity to Service Set Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Capacity to Service Version Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Capacity to Service Set Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Capacity to Service Version Id', displayOptions: { show: { endpoint: [ 'UpdateAllocationSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'Configuration Id', displayOptions: { show: { endpoint: [ 'DeleteAllocationConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CreateAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'Capacity to Service Configuration Id', displayOptions: { show: { endpoint: [ 'CloneAllocationConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to clone', displayOptions: { show: { endpoint: [ 'CloneAllocationConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'UpdateAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Number of version to update', displayOptions: { show: { endpoint: [ 'UpdateAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SubmitAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'SubmitAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SignAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to sign', displayOptions: { show: { endpoint: [ 'SignAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'ArchiveAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to archive', displayOptions: { show: { endpoint: [ 'ArchiveAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'Configuration Id', displayOptions: { show: { endpoint: [ 'DeleteConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'CreateConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'Configuration Id', displayOptions: { show: { endpoint: [ 'CloneConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Version number to clone', displayOptions: { show: { endpoint: [ 'CloneConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'UpdateConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'Number of version to update', displayOptions: { show: { endpoint: [ 'UpdateConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SubmitConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to submit', displayOptions: { show: { endpoint: [ 'SubmitConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'SignConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to sign', displayOptions: { show: { endpoint: [ 'SignConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'configurationId', name: 'configurationId', type: 'string', required: true, default: '', description: 'The Id of the existing model', displayOptions: { show: { endpoint: [ 'ArchiveConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'versionNumber', name: 'versionNumber', type: 'string', required: true, default: '', description: 'The version number of the version to archive', displayOptions: { show: { endpoint: [ 'ArchiveConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'CreateFinancialAnalysisVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateScenarios' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateScenarios' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateSummary' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateSummary' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisReviewStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisReviewStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'journeyId', name: 'journeyId', type: 'string', required: true, default: '', description: 'Journey Id', displayOptions: { show: { endpoint: [ 'CompleteAllFinancialAnalysisVersions' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'taskId', name: 'taskId', type: 'string', required: true, default: '', description: 'Task id', displayOptions: { show: { endpoint: [ 'CompleteAllFinancialAnalysisVersions' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'setId', name: 'setId', type: 'string', required: true, default: '', description: 'Financial Analysis Set Id', displayOptions: { show: { endpoint: [ 'UpdateSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'id', name: 'id', type: 'string', required: true, default: '', description: 'Financial Analysis Version Id', displayOptions: { show: { endpoint: [ 'UpdateSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: 'Provider Id to issue a Financial Import', displayOptions: { show: { endpoint: [ 'CreateFinancialImport' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'DeleteImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'systemId', name: 'systemId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'CreateDefaultImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateImportProviderEnabled' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'CreateImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'mappingId', name: 'mappingId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'mappingId', name: 'mappingId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'DeleteImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'CreateAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'adapterSchemaId', name: 'adapterSchemaId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'UpdateAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'adapterSchemaId', name: 'adapterSchemaId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'DeleteAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'providerId', name: 'providerId', type: 'string', required: true, default: '', description: '', displayOptions: { show: { endpoint: [ 'TestImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "journeyId": "journeyId", "taskId": "taskId", "status": "status" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateAllocationSet' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityType": "entityType", "targetEntity": "targetEntity", "categories": [ "" ], "properties": {} } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateAllocationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "setId": "setId", "description": "description", "status": "status", "allocationGroups": [ { "id": "id", "name": "name", "type": "type", "allocationItems": [ { "id": "id", "sourceEntityId": "sourceEntityId", "sourceEntityType": "sourceEntityType", "sourceEntityList": [ { "entityId": "entityId", "entityType": "entityType" } ], "relatedPartyId": "relatedPartyId", "relatedPartyType": "relatedPartyType", "relatedPartyList": [ { "entityId": "entityId", "entityType": "entityType" } ], "allocationType": "allocationType", "periodReferences": [ { "periodName": "periodName", "value": "value" } ] } ], "calculationSummaries": [ { "periodName": "periodName", "value": "value" } ], "periods": [ { "name": "name", "startDate": "2024-10-07T14:16:02.7882480+00:00", "endDate": "2024-10-07T14:16:02.7882522+00:00" } ], "financialAnalysisRecords": [ { "entityId": "entityId", "financialAnalysisSetId": "financialAnalysisSetId", "financialAnalysisVersionId": "financialAnalysisVersionId", "financialGroupId": "financialGroupId", "financialItemId": "financialItemId", "periodReferences": [ { "periodName": "periodName", "value": "value" } ] } ] } ], "lastUpdatedDateTime": "2024-10-07T14:16:02.7882845+00:00", "createdDateTime": "2024-10-07T14:16:02.7882871+00:00", "isAllocationsDisabledByUser": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateAllocationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "status": "status" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateAllocationStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityType": "entityType", "targetEntity": "targetEntity", "categories": [ "" ], "properties": {} } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateAllocationSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "versionNumber": 0, "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7884127+00:00", "prefix": "prefix", "businessCategory": "businessCategory", "validationData": { "isMandatory": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "numberLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "allocationValidationData": { "onlyIndividualsCanAllocate": { "active": false, "message": "message" }, "totalAllocationLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "effectiveFrom": "2024-10-07T14:16:02.7885307+00:00", "created": "2024-10-07T14:16:02.7885334+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7885673+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7885817+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7885960+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7886099+00:00" }, "hasProcessedRequest": false } ], "totalRowDataGroupId": "totalRowDataGroupId", "totalRowFinancialItem": "totalRowFinancialItem" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateAllocationConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "configurationId": "configurationId", "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7887028+00:00", "prefix": "prefix", "businessCategory": "businessCategory", "validationData": { "isMandatory": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "numberLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "allocationValidationData": { "onlyIndividualsCanAllocate": { "active": false, "message": "message" }, "totalAllocationLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "versionNumber": 0, "effectiveFrom": "2024-10-07T14:16:02.7888167+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7888476+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7888614+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7888751+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7888884+00:00" }, "hasProcessedRequest": false } ], "totalRowDataGroupId": "totalRowDataGroupId", "totalRowFinancialItem": "totalRowFinancialItem" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CloneAllocationConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "configurationId": "configurationId", "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7889994+00:00", "prefix": "prefix", "businessCategory": "businessCategory", "validationData": { "isMandatory": { "active": false, "message": "message" }, "onlyInteger": { "active": false, "message": "message" }, "noNegative": { "active": false, "message": "message" }, "onlyDecimal": { "active": false, "message": "message" }, "numberLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "allocationValidationData": { "onlyIndividualsCanAllocate": { "active": false, "message": "message" }, "totalAllocationLimit": { "active": false, "message": "message", "minValue": 0, "maxValue": 0 } }, "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "versionNumber": 0, "effectiveFrom": "2024-10-07T14:16:02.7891077+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7891381+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7891533+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7891672+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7891800+00:00" }, "hasProcessedRequest": false } ], "totalRowDataGroupId": "totalRowDataGroupId", "totalRowFinancialItem": "totalRowFinancialItem" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7892732+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignAllocationConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "versionNumber": 0, "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7893230+00:00", "prefix": "prefix", "dataGroups": [ { "dataGroupId": "dataGroupId", "versionNumber": 0 } ], "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "effectiveFrom": "2024-10-07T14:16:02.7893715+00:00", "created": "2024-10-07T14:16:02.7893749+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7894066+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7894236+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7894380+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7894509+00:00" }, "hasProcessedRequest": false } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "configurationId": "configurationId", "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7895244+00:00", "prefix": "prefix", "dataGroups": [ { "dataGroupId": "dataGroupId", "versionNumber": 0 } ], "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "versionNumber": 0, "effectiveFrom": "2024-10-07T14:16:02.7895781+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7896086+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7896228+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7896362+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7896500+00:00" }, "hasProcessedRequest": false } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "name": "name" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CloneConfiguration' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "configurationId": "configurationId", "name": "name", "periodType": "periodType", "numberOfPreviousPeriods": 0, "startDate": "2024-10-07T14:16:02.7897392+00:00", "prefix": "prefix", "dataGroups": [ { "dataGroupId": "dataGroupId", "versionNumber": 0 } ], "conditionOperators": [ { "id": "id", "logicalOperator": "logicalOperator", "conditionName": "conditionName", "conditionDescription": "conditionDescription", "conditionOperatorItems": [ { "id": "id", "dataSource": "dataSource", "dataKey": "dataKey", "logicalOperator": "logicalOperator", "value": [ "" ], "valueType": "valueType" } ] } ], "versionNumber": 0, "effectiveFrom": "2024-10-07T14:16:02.7897921+00:00", "signees": [ { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": { "subject": "subject", "successor": null, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7898229+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7898377+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7898514+00:00" }, "hasProcessedRequest": false }, "action": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7898644+00:00" }, "hasProcessedRequest": false } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "comment": "comment", "decision": "Approve", "created": "2024-10-07T14:16:02.7899594+00:00" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'SignConfigurationVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "entityId": "entityId", "entityType": "entityType", "journeyId": "journeyId", "taskId": "taskId", "status": "status", "isExternalReviewRequired": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateFinancialAnalysisSet' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "journeyId": "journeyId", "taskId": "taskId", "entitiesList": [ { "entityId": "entityId", "entityType": "entityType" } ], "retrieveSchemas": [ { "entityType": "entityType", "targetEntity": "targetEntity", "jurisdictions": [ { "jurisdiction": "jurisdiction", "versionId": "versionId" } ], "categories": [ "" ], "scenarioCategories": [ "" ], "summaryCategories": [ "" ], "entityDataProperties": {}, "dealProperties": {}, "requirementSetId": "requirementSetId", "requirementVersion": 0, "isCurrentEntityPartOfJoint": false } ], "isExternalReviewRequired": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'InitializeJointFinancialAnalysis' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityType": "entityType", "targetEntity": "targetEntity", "jurisdictions": [ { "jurisdiction": "jurisdiction", "versionId": "versionId" } ], "categories": [ "" ], "scenarioCategories": [ "" ], "summaryCategories": [ "" ], "entityDataProperties": {}, "dealProperties": {}, "requirementSetId": "requirementSetId", "requirementVersion": 0, "isCurrentEntityPartOfJoint": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateFinancialAnalysisVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "setId": "setId", "description": "description", "status": "status", "financialGroups": [ { "id": "id", "name": "name", "type": "type", "financialItems": [ { "id": "id", "dataKey": "dataKey", "value": "value", "providerId": "providerId", "source": "source", "properties": {}, "periodReferences": [ { "periodName": "periodName", "value": "value" } ] } ], "calculationSummaries": [ { "periodName": "periodName", "value": "value" } ], "periods": [ { "name": "name", "startDate": "2024-10-07T14:16:02.7902822+00:00", "endDate": "2024-10-07T14:16:02.7902855+00:00" } ] } ], "financialCommentaries": [ { "id": "id", "name": "name", "type": "type", "properties": {} } ], "lastUpdatedDateTime": "2024-10-07T14:16:02.7903054+00:00", "createdDateTime": "2024-10-07T14:16:02.7903077+00:00", "externalReviewStatus": "externalReviewStatus" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisVersion' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "setId": "setId", "scenarioGroups": [ { "id": "id", "name": "name", "type": "type", "scenarioItems": [ { "id": "id", "foreignId": "foreignId", "dataKey": "dataKey", "value": "value", "source": "source", "providerId": "providerId", "properties": {}, "scenarioValues": [ { "id": "id", "value": "value" } ] } ], "scenarioColumnDefinitions": [ { "id": "id", "name": "name", "groupId": "groupId", "readOnly": false, "order": 0, "source": "source" } ] } ], "scenarioCommentaries": [ { "id": "id", "name": "name", "type": "type", "properties": {} } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateScenarios' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "setId": "setId", "id": "id", "summaryGroups": [ { "id": "id", "actualGroupId": "actualGroupId", "scenarioGroupId": "scenarioGroupId", "name": "name", "type": "type", "summaryItems": [ { "id": "id", "actualItemId": "actualItemId", "scenarioItemId": "scenarioItemId", "dataKey": "dataKey", "value": "value", "source": "source", "properties": {}, "summaryValues": [ { "id": "id", "value": "value" } ] } ], "calculationSummaries": [ { "id": "id", "value": "value" } ], "summaryColumnDefinitions": [ { "id": "id", "name": "name", "type": "type", "originColumnId": "originColumnId" } ] } ], "summaryCommentaries": [ { "id": "id", "name": "name", "type": "type", "properties": {} } ] } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateSummary' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "status": "status" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "status": "status" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "status": "status" } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateFinancialAnalysisReviewStatus' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityType": "entityType", "targetEntity": "targetEntity", "jurisdictions": [ { "jurisdiction": "jurisdiction", "versionId": "versionId" } ], "categories": [ "" ], "scenarioCategories": [ "" ], "summaryCategories": [ "" ], "entityDataProperties": {}, "dealProperties": {}, "requirementSetId": "requirementSetId", "requirementVersion": 0, "isCurrentEntityPartOfJoint": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityId": "entityId", "journeyId": "journeyId", "taskId": "taskId", "importParameters": null } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateFinancialImport' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "name": "name", "enabled": false, "providerConfigurationDto": { "providerDetailsDtos": [ { "name": "name", "value": "value", "description": "description", "maskRequired": false } ], "adapterConfigurationDto": { "url": "url" }, "securityKeysDto": { "authenticationKey": "authenticationKey", "encryptionKey": "encryptionKey" } } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "entityId": "entityId", "journeyId": "journeyId", "taskId": "taskId", "importParameters": null } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateFinancialImportsToAllProviders' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "name": "name", "enabled": false, "providerConfigurationDto": { "providerDetailsDtos": [ { "name": "name", "value": "value", "description": "description", "maskRequired": false } ], "adapterConfigurationDto": { "url": "url" }, "securityKeysDto": { "authenticationKey": "authenticationKey", "encryptionKey": "encryptionKey" } } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateImportProvider' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "enabled": false } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateImportProviderEnabled' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "providerId": "providerId", "importRequestDto": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": null, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "importResultDto": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": null, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "providerId": "providerId", "importRequestDto": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": null, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "importResultDto": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": { "ruleSets": [ { "mappingRules": [ { "order": 0, "propertyName": "propertyName", "isArrayProperty": false, "includingNestedPath": false } ], "targetProperty": "targetProperty", "targetPropertyFriendlyName": "targetPropertyFriendlyName", "nestedMappingRules": null, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] }, "targetPropertyType": "targetPropertyType" } ] } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateImportMapping' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "providerId": "providerId", "schema": { "importRequest": { "fields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [] } ] } ] } ] }, "importResult": { "fields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [] } ] } ] } ] } } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'CreateAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } },{ displayName: 'Request', name: 'request', type: 'json', required: true, default: '{ "data": { "id": "id", "providerId": "providerId", "schema": { "importRequest": { "fields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [] } ] } ] } ] }, "importResult": { "fields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [ { "name": "name", "friendlyName": "friendlyName", "isMandatory": false, "type": "type", "description": "description", "nestedFields": [] } ] } ] } ] } } } }', description: 'Request body', displayOptions: { show: { endpoint: [ 'UpdateAdapterSchema' ], domain: [ 'FenergoFinancialAnalysisCommandAPIv10' ] } } }
];

async function ExecuteFenergoFinancialAnalysisCommandAPIv10(base: IExecuteFunctions): Promise < INodeExecutionData[][] > {
    // @ts-ignore
    let token = await FenXToken.getToken(base);

    let requestOptions: OptionsWithUri = {
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token,
            'x-tenant-id': FenXToken.tenant
        },
        gzip: true,
        timeout: 3600000,
        uri: ""
    };

    const endpoint = base.getNodeParameter('endpoint', 0) as string;

    let setId=''; let id=''; let configurationId=''; let versionNumber=''; let journeyId=''; let taskId=''; let providerId=''; let systemId=''; let mappingId=''; let adapterSchemaId='';
switch(endpoint){ case 'CreateAllocationSet': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/allocation';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateAllocationVersion': setId = base.getNodeParameter('setId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/allocation/{setId}/version'.replace('{setId}', setId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateAllocationVersion': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/allocation/{setId}/{id}'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateAllocationStatus': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/allocation/{setId}/{id}/status'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateAllocationSchema': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/allocation/{setId}/{id}/schema'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateAllocationConfiguration': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteAllocationConfiguration': configurationId = base.getNodeParameter('configurationId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}'.replace('{configurationId}', configurationId);

break;
case 'CreateAllocationConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}'.replace('{configurationId}', configurationId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneAllocationConfiguration': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}/version/{versionNumber}/clone'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateAllocationConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}/version/{versionNumber}'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitAllocationConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}/version/{versionNumber}/submit-for-approval'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

break;
case 'SignAllocationConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}/version/{versionNumber}/sign'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveAllocationConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/allocation/{configurationId}/version/{versionNumber}/archive'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

break;
case 'CreateConfiguration': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteConfiguration': configurationId = base.getNodeParameter('configurationId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}'.replace('{configurationId}', configurationId);

break;
case 'CreateConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}'.replace('{configurationId}', configurationId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CloneConfiguration': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}/version/{versionNumber}/clone'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}/version/{versionNumber}'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'SubmitConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}/version/{versionNumber}/submit-for-approval'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

break;
case 'SignConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}/version/{versionNumber}/sign'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'ArchiveConfigurationVersion': configurationId = base.getNodeParameter('configurationId', 0) as string;
versionNumber = base.getNodeParameter('versionNumber', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/configuration/{configurationId}/version/{versionNumber}/archive'.replace('{configurationId}', configurationId).replace('{versionNumber}', versionNumber);

break;
case 'CreateFinancialAnalysisSet': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'InitializeJointFinancialAnalysis': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/joint';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateFinancialAnalysisVersion': setId = base.getNodeParameter('setId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/version'.replace('{setId}', setId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateFinancialAnalysisVersion': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/{id}'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateScenarios': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/{id}/scenario'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateSummary': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/{id}/summary'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateFinancialAnalysisStatus': setId = base.getNodeParameter('setId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/status'.replace('{setId}', setId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateFinancialAnalysisStatus': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/{id}/status'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateFinancialAnalysisReviewStatus': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/version/{id}/reviewstatus'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CompleteAllFinancialAnalysisVersions': journeyId = base.getNodeParameter('journeyId', 0) as string;
taskId = base.getNodeParameter('taskId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{journeyId}/{taskId}/complete'.replace('{journeyId}', journeyId).replace('{taskId}', taskId);

break;
case 'UpdateSchema': setId = base.getNodeParameter('setId', 0) as string;
id = base.getNodeParameter('id', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/financialanalysis/{setId}/{id}/schema'.replace('{setId}', setId).replace('{id}', id);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateFinancialImport': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}'.replace('{providerId}', providerId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateImportProvider': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}'.replace('{providerId}', providerId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteImportProvider': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}'.replace('{providerId}', providerId);

break;
case 'CreateFinancialImportsToAllProviders': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateImportProvider': 
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider';

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateDefaultImportProvider': systemId = base.getNodeParameter('systemId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{systemId}/default'.replace('{systemId}', systemId);

break;
case 'UpdateImportProviderEnabled': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/enabled'.replace('{providerId}', providerId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'CreateImportMapping': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/mapping'.replace('{providerId}', providerId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateImportMapping': providerId = base.getNodeParameter('providerId', 0) as string;
mappingId = base.getNodeParameter('mappingId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/mapping/{mappingId}'.replace('{providerId}', providerId).replace('{mappingId}', mappingId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteImportMapping': mappingId = base.getNodeParameter('mappingId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/mapping/{mappingId}'.replace('{mappingId}', mappingId);

break;
case 'CreateAdapterSchema': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/adapterSchema'.replace('{providerId}', providerId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'UpdateAdapterSchema': providerId = base.getNodeParameter('providerId', 0) as string;
adapterSchemaId = base.getNodeParameter('adapterSchemaId', 0) as string;
requestOptions.method = 'PUT';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/adapterSchema/{adapterSchemaId}'.replace('{providerId}', providerId).replace('{adapterSchemaId}', adapterSchemaId);

requestOptions.body = base.getNodeParameter('request', 0) as string; requestOptions.json = true;break;
case 'DeleteAdapterSchema': adapterSchemaId = base.getNodeParameter('adapterSchemaId', 0) as string;
requestOptions.method = 'DELETE';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/adapterSchema/{adapterSchemaId}'.replace('{adapterSchemaId}', adapterSchemaId);

break;
case 'TestImportProvider': providerId = base.getNodeParameter('providerId', 0) as string;
requestOptions.method = 'POST';
requestOptions.uri = 'https://api.apac1.fenergox.com/financialanalysiscommand/api/import/provider/{providerId}/test'.replace('{providerId}', providerId);

break;
}

	let request = base.helpers.request(requestOptions);

    // @ts-ignore
    const promisesResponses = await Promise.allSettled([request]);
    let response: any; // tslint:disable-line:no-any
    response = promisesResponses.shift();
    if(response!.status !== 'fulfilled') {
    // throw error;
    console.log(request);
    throw new NodeApiError(base.getNode(), response);
}
    try {
        response = JSON.parse(response.value);
    }
    catch { response = response.value; }

const returnItems: INodeExecutionData[] = [];
returnItems.push({ json: response });

return base.prepareOutputData(returnItems);
}

export {
    FenergoFinancialAnalysisCommandAPIv10Properties,
    ExecuteFenergoFinancialAnalysisCommandAPIv10
}
